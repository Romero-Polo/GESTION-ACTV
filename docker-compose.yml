version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gestion-backend
    environment:
      - NODE_ENV=production
      - PORT=3000
      # SQL Server Configuration (External Database)
      - DB_HOST=${DB_HOST:-192.168.0.30}
      - DB_PORT=${DB_PORT:-1433}
      - DB_USERNAME=${DB_USERNAME:-rp-gestorjornadas}
      - DB_PASSWORD=${DB_PASSWORD:-your_db_password}
      - DB_NAME=${DB_NAME:-RP_GESTOR_JORNADAS}
      - DB_SYNCHRONIZE=false
      - DB_LOGGING=false
      # Authentication
      - JWT_SECRET=${JWT_SECRET:-change-this-secret-in-production}
      - JWT_EXPIRES_IN=24h
      - SESSION_SECRET=${SESSION_SECRET:-change-this-session-secret}
      - SESSION_MAX_AGE=3600000
      # Azure AD Configuration
      - AZURE_AD_CLIENT_ID=${AZURE_AD_CLIENT_ID:-}
      - AZURE_AD_CLIENT_SECRET=${AZURE_AD_CLIENT_SECRET:-}
      - AZURE_AD_TENANT_ID=${AZURE_AD_TENANT_ID:-}
      - AZURE_AD_REDIRECT_URI=${AZURE_AD_REDIRECT_URI:-http://localhost:8080/auth/callback}
      # Application URLs
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:8080}
      # n8n Integration (optional)
      - N8N_API_URL=${N8N_API_URL:-}
      - N8N_API_KEY=${N8N_API_KEY:-}
      - N8N_WEBHOOK_SECRET=${N8N_WEBHOOK_SECRET:-}
      - N8N_TIMEOUT=30000
      - N8N_RETRY_ATTEMPTS=3
      # Synchronization
      - SYNC_ENABLED=${SYNC_ENABLED:-true}
      - SYNC_OBRAS_ENABLED=${SYNC_OBRAS_ENABLED:-true}
      - SYNC_RECURSOS_ENABLED=${SYNC_RECURSOS_ENABLED:-true}
      - SYNC_OBRAS_CRON=${SYNC_OBRAS_CRON:-0 6 * * *}
      - SYNC_RECURSOS_CRON=${SYNC_RECURSOS_CRON:-0 6 * * *}
      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FORMAT=json
      - LOG_DIR=/app/logs
    ports:
      - "3000:3000"
    networks:
      - app-network
    volumes:
      - backend_logs:/app/logs
      - backend_uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # Frontend (Nginx serving static files)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: /api
        VITE_APP_TITLE: "Gesti√≥n de Actividad Laboral"
        VITE_APP_VERSION: "1.0.0"
    container_name: gestion-frontend
    environment:
      - NODE_ENV=production
    ports:
      - "8080:8080"
    depends_on:
      - backend
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

# Network
networks:
  app-network:
    driver: bridge

# Persistent volumes
volumes:
  backend_logs:
    driver: local
  backend_uploads:
    driver: local
